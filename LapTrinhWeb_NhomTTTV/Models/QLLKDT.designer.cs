#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LapTrinhWeb_NhomTTTV.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLLKDT")]
	public partial class QLLKDTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void Insertsanphamkhuyenmai(sanphamkhuyenmai instance);
    partial void Updatesanphamkhuyenmai(sanphamkhuyenmai instance);
    partial void Deletesanphamkhuyenmai(sanphamkhuyenmai instance);
    partial void InsertChitietdonhang(Chitietdonhang instance);
    partial void UpdateChitietdonhang(Chitietdonhang instance);
    partial void DeleteChitietdonhang(Chitietdonhang instance);
    partial void InsertchitietSanPhamKhuyenMai(chitietSanPhamKhuyenMai instance);
    partial void UpdatechitietSanPhamKhuyenMai(chitietSanPhamKhuyenMai instance);
    partial void DeletechitietSanPhamKhuyenMai(chitietSanPhamKhuyenMai instance);
    partial void InsertDonhang(Donhang instance);
    partial void UpdateDonhang(Donhang instance);
    partial void DeleteDonhang(Donhang instance);
    partial void InsertHangsanxuat(Hangsanxuat instance);
    partial void UpdateHangsanxuat(Hangsanxuat instance);
    partial void DeleteHangsanxuat(Hangsanxuat instance);
    partial void InsertLoaisp(Loaisp instance);
    partial void UpdateLoaisp(Loaisp instance);
    partial void DeleteLoaisp(Loaisp instance);
    partial void InsertLoHang(LoHang instance);
    partial void UpdateLoHang(LoHang instance);
    partial void DeleteLoHang(LoHang instance);
    partial void InsertNguoidung(Nguoidung instance);
    partial void UpdateNguoidung(Nguoidung instance);
    partial void DeleteNguoidung(Nguoidung instance);
    partial void InsertNhaCungCap(NhaCungCap instance);
    partial void UpdateNhaCungCap(NhaCungCap instance);
    partial void DeleteNhaCungCap(NhaCungCap instance);
    partial void InsertPhanQuyen(PhanQuyen instance);
    partial void UpdatePhanQuyen(PhanQuyen instance);
    partial void DeletePhanQuyen(PhanQuyen instance);
    partial void InsertQuangCao(QuangCao instance);
    partial void UpdateQuangCao(QuangCao instance);
    partial void DeleteQuangCao(QuangCao instance);
    partial void InsertSanpham(Sanpham instance);
    partial void UpdateSanpham(Sanpham instance);
    partial void DeleteSanpham(Sanpham instance);
    #endregion
		
		public QLLKDTDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLLKDTConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLLKDTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLLKDTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLLKDTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLLKDTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<sanphamkhuyenmai> sanphamkhuyenmais
		{
			get
			{
				return this.GetTable<sanphamkhuyenmai>();
			}
		}
		
		public System.Data.Linq.Table<Chitietdonhang> Chitietdonhangs
		{
			get
			{
				return this.GetTable<Chitietdonhang>();
			}
		}
		
		public System.Data.Linq.Table<chitietSanPhamKhuyenMai> chitietSanPhamKhuyenMais
		{
			get
			{
				return this.GetTable<chitietSanPhamKhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<Donhang> Donhangs
		{
			get
			{
				return this.GetTable<Donhang>();
			}
		}
		
		public System.Data.Linq.Table<Hangsanxuat> Hangsanxuats
		{
			get
			{
				return this.GetTable<Hangsanxuat>();
			}
		}
		
		public System.Data.Linq.Table<Loaisp> Loaisps
		{
			get
			{
				return this.GetTable<Loaisp>();
			}
		}
		
		public System.Data.Linq.Table<LoHang> LoHangs
		{
			get
			{
				return this.GetTable<LoHang>();
			}
		}
		
		public System.Data.Linq.Table<Nguoidung> Nguoidungs
		{
			get
			{
				return this.GetTable<Nguoidung>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
		{
			get
			{
				return this.GetTable<NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<PhanQuyen> PhanQuyens
		{
			get
			{
				return this.GetTable<PhanQuyen>();
			}
		}
		
		public System.Data.Linq.Table<QuangCao> QuangCaos
		{
			get
			{
				return this.GetTable<QuangCao>();
			}
		}
		
		public System.Data.Linq.Table<Sanpham> Sanphams
		{
			get
			{
				return this.GetTable<Sanpham>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserAdmin;
		
		private string _PassAdmin;
		
		private string _Hoten;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserAdminChanging(string value);
    partial void OnUserAdminChanged();
    partial void OnPassAdminChanging(string value);
    partial void OnPassAdminChanged();
    partial void OnHotenChanging(string value);
    partial void OnHotenChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdmin", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserAdmin
		{
			get
			{
				return this._UserAdmin;
			}
			set
			{
				if ((this._UserAdmin != value))
				{
					this.OnUserAdminChanging(value);
					this.SendPropertyChanging();
					this._UserAdmin = value;
					this.SendPropertyChanged("UserAdmin");
					this.OnUserAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassAdmin", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PassAdmin
		{
			get
			{
				return this._PassAdmin;
			}
			set
			{
				if ((this._PassAdmin != value))
				{
					this.OnPassAdminChanging(value);
					this.SendPropertyChanging();
					this._PassAdmin = value;
					this.SendPropertyChanged("PassAdmin");
					this.OnPassAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hoten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Hoten
		{
			get
			{
				return this._Hoten;
			}
			set
			{
				if ((this._Hoten != value))
				{
					this.OnHotenChanging(value);
					this.SendPropertyChanging();
					this._Hoten = value;
					this.SendPropertyChanged("Hoten");
					this.OnHotenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sanphamkhuyenmai")]
	public partial class sanphamkhuyenmai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Maspkm;
		
		private string _Tieude;
		
		private string _Noidung;
		
		private string _Phantram;
		
		private System.Nullable<System.DateTime> _Thoigian;
		
		private string _TinhTrang;
		
		private EntitySet<chitietSanPhamKhuyenMai> _chitietSanPhamKhuyenMais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaspkmChanging(int value);
    partial void OnMaspkmChanged();
    partial void OnTieudeChanging(string value);
    partial void OnTieudeChanged();
    partial void OnNoidungChanging(string value);
    partial void OnNoidungChanged();
    partial void OnPhantramChanging(string value);
    partial void OnPhantramChanged();
    partial void OnThoigianChanging(System.Nullable<System.DateTime> value);
    partial void OnThoigianChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public sanphamkhuyenmai()
		{
			this._chitietSanPhamKhuyenMais = new EntitySet<chitietSanPhamKhuyenMai>(new Action<chitietSanPhamKhuyenMai>(this.attach_chitietSanPhamKhuyenMais), new Action<chitietSanPhamKhuyenMai>(this.detach_chitietSanPhamKhuyenMais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maspkm", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Maspkm
		{
			get
			{
				return this._Maspkm;
			}
			set
			{
				if ((this._Maspkm != value))
				{
					this.OnMaspkmChanging(value);
					this.SendPropertyChanging();
					this._Maspkm = value;
					this.SendPropertyChanged("Maspkm");
					this.OnMaspkmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tieude", DbType="NVarChar(50)")]
		public string Tieude
		{
			get
			{
				return this._Tieude;
			}
			set
			{
				if ((this._Tieude != value))
				{
					this.OnTieudeChanging(value);
					this.SendPropertyChanging();
					this._Tieude = value;
					this.SendPropertyChanged("Tieude");
					this.OnTieudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Noidung", DbType="NVarChar(50)")]
		public string Noidung
		{
			get
			{
				return this._Noidung;
			}
			set
			{
				if ((this._Noidung != value))
				{
					this.OnNoidungChanging(value);
					this.SendPropertyChanging();
					this._Noidung = value;
					this.SendPropertyChanged("Noidung");
					this.OnNoidungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phantram", DbType="NVarChar(10)")]
		public string Phantram
		{
			get
			{
				return this._Phantram;
			}
			set
			{
				if ((this._Phantram != value))
				{
					this.OnPhantramChanging(value);
					this.SendPropertyChanging();
					this._Phantram = value;
					this.SendPropertyChanged("Phantram");
					this.OnPhantramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thoigian", DbType="DateTime")]
		public System.Nullable<System.DateTime> Thoigian
		{
			get
			{
				return this._Thoigian;
			}
			set
			{
				if ((this._Thoigian != value))
				{
					this.OnThoigianChanging(value);
					this.SendPropertyChanging();
					this._Thoigian = value;
					this.SendPropertyChanged("Thoigian");
					this.OnThoigianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(20)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sanphamkhuyenmai_chitietSanPhamKhuyenMai", Storage="_chitietSanPhamKhuyenMais", ThisKey="Maspkm", OtherKey="Maspkm")]
		public EntitySet<chitietSanPhamKhuyenMai> chitietSanPhamKhuyenMais
		{
			get
			{
				return this._chitietSanPhamKhuyenMais;
			}
			set
			{
				this._chitietSanPhamKhuyenMais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_chitietSanPhamKhuyenMais(chitietSanPhamKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.sanphamkhuyenmai = this;
		}
		
		private void detach_chitietSanPhamKhuyenMais(chitietSanPhamKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.sanphamkhuyenmai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chitietdonhang")]
	public partial class Chitietdonhang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Madon;
		
		private int _Masp;
		
		private System.Nullable<int> _Soluong;
		
		private System.Nullable<decimal> _Dongia;
		
		private System.Nullable<decimal> _Thanhtien;
		
		private EntityRef<Donhang> _Donhang;
		
		private EntityRef<Sanpham> _Sanpham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMadonChanging(int value);
    partial void OnMadonChanged();
    partial void OnMaspChanging(int value);
    partial void OnMaspChanged();
    partial void OnSoluongChanging(System.Nullable<int> value);
    partial void OnSoluongChanged();
    partial void OnDongiaChanging(System.Nullable<decimal> value);
    partial void OnDongiaChanged();
    partial void OnThanhtienChanging(System.Nullable<decimal> value);
    partial void OnThanhtienChanged();
    #endregion
		
		public Chitietdonhang()
		{
			this._Donhang = default(EntityRef<Donhang>);
			this._Sanpham = default(EntityRef<Sanpham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Madon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Madon
		{
			get
			{
				return this._Madon;
			}
			set
			{
				if ((this._Madon != value))
				{
					if (this._Donhang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMadonChanging(value);
					this.SendPropertyChanging();
					this._Madon = value;
					this.SendPropertyChanged("Madon");
					this.OnMadonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Masp", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Masp
		{
			get
			{
				return this._Masp;
			}
			set
			{
				if ((this._Masp != value))
				{
					if (this._Sanpham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaspChanging(value);
					this.SendPropertyChanging();
					this._Masp = value;
					this.SendPropertyChanged("Masp");
					this.OnMaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluong", DbType="Int")]
		public System.Nullable<int> Soluong
		{
			get
			{
				return this._Soluong;
			}
			set
			{
				if ((this._Soluong != value))
				{
					this.OnSoluongChanging(value);
					this.SendPropertyChanging();
					this._Soluong = value;
					this.SendPropertyChanged("Soluong");
					this.OnSoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dongia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Dongia
		{
			get
			{
				return this._Dongia;
			}
			set
			{
				if ((this._Dongia != value))
				{
					this.OnDongiaChanging(value);
					this.SendPropertyChanging();
					this._Dongia = value;
					this.SendPropertyChanged("Dongia");
					this.OnDongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thanhtien", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Thanhtien
		{
			get
			{
				return this._Thanhtien;
			}
			set
			{
				if ((this._Thanhtien != value))
				{
					this.OnThanhtienChanging(value);
					this.SendPropertyChanging();
					this._Thanhtien = value;
					this.SendPropertyChanged("Thanhtien");
					this.OnThanhtienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Donhang_Chitietdonhang", Storage="_Donhang", ThisKey="Madon", OtherKey="Madon", IsForeignKey=true)]
		public Donhang Donhang
		{
			get
			{
				return this._Donhang.Entity;
			}
			set
			{
				Donhang previousValue = this._Donhang.Entity;
				if (((previousValue != value) 
							|| (this._Donhang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Donhang.Entity = null;
						previousValue.Chitietdonhangs.Remove(this);
					}
					this._Donhang.Entity = value;
					if ((value != null))
					{
						value.Chitietdonhangs.Add(this);
						this._Madon = value.Madon;
					}
					else
					{
						this._Madon = default(int);
					}
					this.SendPropertyChanged("Donhang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sanpham_Chitietdonhang", Storage="_Sanpham", ThisKey="Masp", OtherKey="Masp", IsForeignKey=true)]
		public Sanpham Sanpham
		{
			get
			{
				return this._Sanpham.Entity;
			}
			set
			{
				Sanpham previousValue = this._Sanpham.Entity;
				if (((previousValue != value) 
							|| (this._Sanpham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sanpham.Entity = null;
						previousValue.Chitietdonhangs.Remove(this);
					}
					this._Sanpham.Entity = value;
					if ((value != null))
					{
						value.Chitietdonhangs.Add(this);
						this._Masp = value.Masp;
					}
					else
					{
						this._Masp = default(int);
					}
					this.SendPropertyChanged("Sanpham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chitietSanPhamKhuyenMai")]
	public partial class chitietSanPhamKhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Masp;
		
		private int _Maspkm;
		
		private EntityRef<sanphamkhuyenmai> _sanphamkhuyenmai;
		
		private EntityRef<Sanpham> _Sanpham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaspChanging(int value);
    partial void OnMaspChanged();
    partial void OnMaspkmChanging(int value);
    partial void OnMaspkmChanged();
    #endregion
		
		public chitietSanPhamKhuyenMai()
		{
			this._sanphamkhuyenmai = default(EntityRef<sanphamkhuyenmai>);
			this._Sanpham = default(EntityRef<Sanpham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Masp", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Masp
		{
			get
			{
				return this._Masp;
			}
			set
			{
				if ((this._Masp != value))
				{
					if (this._Sanpham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaspChanging(value);
					this.SendPropertyChanging();
					this._Masp = value;
					this.SendPropertyChanged("Masp");
					this.OnMaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maspkm", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Maspkm
		{
			get
			{
				return this._Maspkm;
			}
			set
			{
				if ((this._Maspkm != value))
				{
					if (this._sanphamkhuyenmai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaspkmChanging(value);
					this.SendPropertyChanging();
					this._Maspkm = value;
					this.SendPropertyChanged("Maspkm");
					this.OnMaspkmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sanphamkhuyenmai_chitietSanPhamKhuyenMai", Storage="_sanphamkhuyenmai", ThisKey="Maspkm", OtherKey="Maspkm", IsForeignKey=true)]
		public sanphamkhuyenmai sanphamkhuyenmai
		{
			get
			{
				return this._sanphamkhuyenmai.Entity;
			}
			set
			{
				sanphamkhuyenmai previousValue = this._sanphamkhuyenmai.Entity;
				if (((previousValue != value) 
							|| (this._sanphamkhuyenmai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sanphamkhuyenmai.Entity = null;
						previousValue.chitietSanPhamKhuyenMais.Remove(this);
					}
					this._sanphamkhuyenmai.Entity = value;
					if ((value != null))
					{
						value.chitietSanPhamKhuyenMais.Add(this);
						this._Maspkm = value.Maspkm;
					}
					else
					{
						this._Maspkm = default(int);
					}
					this.SendPropertyChanged("sanphamkhuyenmai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sanpham_chitietSanPhamKhuyenMai", Storage="_Sanpham", ThisKey="Masp", OtherKey="Masp", IsForeignKey=true)]
		public Sanpham Sanpham
		{
			get
			{
				return this._Sanpham.Entity;
			}
			set
			{
				Sanpham previousValue = this._Sanpham.Entity;
				if (((previousValue != value) 
							|| (this._Sanpham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sanpham.Entity = null;
						previousValue.chitietSanPhamKhuyenMais.Remove(this);
					}
					this._Sanpham.Entity = value;
					if ((value != null))
					{
						value.chitietSanPhamKhuyenMais.Add(this);
						this._Masp = value.Masp;
					}
					else
					{
						this._Masp = default(int);
					}
					this.SendPropertyChanged("Sanpham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Donhang")]
	public partial class Donhang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Madon;
		
		private System.Nullable<System.DateTime> _Ngaydat;
		
		private System.Nullable<System.DateTime> _Ngaygiao;
		
		private System.Nullable<int> _Tinhtrang;
		
		private System.Nullable<int> _MaNguoidung;
		
		private EntitySet<Chitietdonhang> _Chitietdonhangs;
		
		private EntityRef<Nguoidung> _Nguoidung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMadonChanging(int value);
    partial void OnMadonChanged();
    partial void OnNgaydatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaydatChanged();
    partial void OnNgaygiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaygiaoChanged();
    partial void OnTinhtrangChanging(System.Nullable<int> value);
    partial void OnTinhtrangChanged();
    partial void OnMaNguoidungChanging(System.Nullable<int> value);
    partial void OnMaNguoidungChanged();
    #endregion
		
		public Donhang()
		{
			this._Chitietdonhangs = new EntitySet<Chitietdonhang>(new Action<Chitietdonhang>(this.attach_Chitietdonhangs), new Action<Chitietdonhang>(this.detach_Chitietdonhangs));
			this._Nguoidung = default(EntityRef<Nguoidung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Madon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Madon
		{
			get
			{
				return this._Madon;
			}
			set
			{
				if ((this._Madon != value))
				{
					this.OnMadonChanging(value);
					this.SendPropertyChanging();
					this._Madon = value;
					this.SendPropertyChanged("Madon");
					this.OnMadonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaydat", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaydat
		{
			get
			{
				return this._Ngaydat;
			}
			set
			{
				if ((this._Ngaydat != value))
				{
					this.OnNgaydatChanging(value);
					this.SendPropertyChanging();
					this._Ngaydat = value;
					this.SendPropertyChanged("Ngaydat");
					this.OnNgaydatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaygiao", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaygiao
		{
			get
			{
				return this._Ngaygiao;
			}
			set
			{
				if ((this._Ngaygiao != value))
				{
					this.OnNgaygiaoChanging(value);
					this.SendPropertyChanging();
					this._Ngaygiao = value;
					this.SendPropertyChanged("Ngaygiao");
					this.OnNgaygiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tinhtrang", DbType="Int")]
		public System.Nullable<int> Tinhtrang
		{
			get
			{
				return this._Tinhtrang;
			}
			set
			{
				if ((this._Tinhtrang != value))
				{
					this.OnTinhtrangChanging(value);
					this.SendPropertyChanging();
					this._Tinhtrang = value;
					this.SendPropertyChanged("Tinhtrang");
					this.OnTinhtrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNguoidung", DbType="Int")]
		public System.Nullable<int> MaNguoidung
		{
			get
			{
				return this._MaNguoidung;
			}
			set
			{
				if ((this._MaNguoidung != value))
				{
					if (this._Nguoidung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNguoidungChanging(value);
					this.SendPropertyChanging();
					this._MaNguoidung = value;
					this.SendPropertyChanged("MaNguoidung");
					this.OnMaNguoidungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Donhang_Chitietdonhang", Storage="_Chitietdonhangs", ThisKey="Madon", OtherKey="Madon")]
		public EntitySet<Chitietdonhang> Chitietdonhangs
		{
			get
			{
				return this._Chitietdonhangs;
			}
			set
			{
				this._Chitietdonhangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nguoidung_Donhang", Storage="_Nguoidung", ThisKey="MaNguoidung", OtherKey="MaNguoiDung", IsForeignKey=true)]
		public Nguoidung Nguoidung
		{
			get
			{
				return this._Nguoidung.Entity;
			}
			set
			{
				Nguoidung previousValue = this._Nguoidung.Entity;
				if (((previousValue != value) 
							|| (this._Nguoidung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nguoidung.Entity = null;
						previousValue.Donhangs.Remove(this);
					}
					this._Nguoidung.Entity = value;
					if ((value != null))
					{
						value.Donhangs.Add(this);
						this._MaNguoidung = value.MaNguoiDung;
					}
					else
					{
						this._MaNguoidung = default(Nullable<int>);
					}
					this.SendPropertyChanged("Nguoidung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chitietdonhangs(Chitietdonhang entity)
		{
			this.SendPropertyChanging();
			entity.Donhang = this;
		}
		
		private void detach_Chitietdonhangs(Chitietdonhang entity)
		{
			this.SendPropertyChanging();
			entity.Donhang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hangsanxuat")]
	public partial class Hangsanxuat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Mahang;
		
		private string _Tenhang;
		
		private EntitySet<Sanpham> _Sanphams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMahangChanging(int value);
    partial void OnMahangChanged();
    partial void OnTenhangChanging(string value);
    partial void OnTenhangChanged();
    #endregion
		
		public Hangsanxuat()
		{
			this._Sanphams = new EntitySet<Sanpham>(new Action<Sanpham>(this.attach_Sanphams), new Action<Sanpham>(this.detach_Sanphams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mahang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Mahang
		{
			get
			{
				return this._Mahang;
			}
			set
			{
				if ((this._Mahang != value))
				{
					this.OnMahangChanging(value);
					this.SendPropertyChanging();
					this._Mahang = value;
					this.SendPropertyChanged("Mahang");
					this.OnMahangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenhang", DbType="NChar(10)")]
		public string Tenhang
		{
			get
			{
				return this._Tenhang;
			}
			set
			{
				if ((this._Tenhang != value))
				{
					this.OnTenhangChanging(value);
					this.SendPropertyChanging();
					this._Tenhang = value;
					this.SendPropertyChanged("Tenhang");
					this.OnTenhangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hangsanxuat_Sanpham", Storage="_Sanphams", ThisKey="Mahang", OtherKey="Mahang")]
		public EntitySet<Sanpham> Sanphams
		{
			get
			{
				return this._Sanphams;
			}
			set
			{
				this._Sanphams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sanphams(Sanpham entity)
		{
			this.SendPropertyChanging();
			entity.Hangsanxuat = this;
		}
		
		private void detach_Sanphams(Sanpham entity)
		{
			this.SendPropertyChanging();
			entity.Hangsanxuat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loaisp")]
	public partial class Loaisp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Maloaisp;
		
		private string _Tenloaisp;
		
		private EntitySet<Sanpham> _Sanphams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaloaispChanging(int value);
    partial void OnMaloaispChanged();
    partial void OnTenloaispChanging(string value);
    partial void OnTenloaispChanged();
    #endregion
		
		public Loaisp()
		{
			this._Sanphams = new EntitySet<Sanpham>(new Action<Sanpham>(this.attach_Sanphams), new Action<Sanpham>(this.detach_Sanphams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maloaisp", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Maloaisp
		{
			get
			{
				return this._Maloaisp;
			}
			set
			{
				if ((this._Maloaisp != value))
				{
					this.OnMaloaispChanging(value);
					this.SendPropertyChanging();
					this._Maloaisp = value;
					this.SendPropertyChanged("Maloaisp");
					this.OnMaloaispChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenloaisp", DbType="NChar(10)")]
		public string Tenloaisp
		{
			get
			{
				return this._Tenloaisp;
			}
			set
			{
				if ((this._Tenloaisp != value))
				{
					this.OnTenloaispChanging(value);
					this.SendPropertyChanging();
					this._Tenloaisp = value;
					this.SendPropertyChanged("Tenloaisp");
					this.OnTenloaispChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loaisp_Sanpham", Storage="_Sanphams", ThisKey="Maloaisp", OtherKey="Maloaisp")]
		public EntitySet<Sanpham> Sanphams
		{
			get
			{
				return this._Sanphams;
			}
			set
			{
				this._Sanphams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sanphams(Sanpham entity)
		{
			this.SendPropertyChanging();
			entity.Loaisp = this;
		}
		
		private void detach_Sanphams(Sanpham entity)
		{
			this.SendPropertyChanging();
			entity.Loaisp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoHang")]
	public partial class LoHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Malohang;
		
		private string _KiHieu;
		
		private System.Nullable<System.DateTime> _HSD;
		
		private int _Soluongnhap;
		
		private System.Nullable<decimal> _Giatien;
		
		private string _TinhTrang;
		
		private int _Masp;
		
		private int _Mancc;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
		private EntityRef<Sanpham> _Sanpham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMalohangChanging(int value);
    partial void OnMalohangChanged();
    partial void OnKiHieuChanging(string value);
    partial void OnKiHieuChanged();
    partial void OnHSDChanging(System.Nullable<System.DateTime> value);
    partial void OnHSDChanged();
    partial void OnSoluongnhapChanging(int value);
    partial void OnSoluongnhapChanged();
    partial void OnGiatienChanging(System.Nullable<decimal> value);
    partial void OnGiatienChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnMaspChanging(int value);
    partial void OnMaspChanged();
    partial void OnManccChanging(int value);
    partial void OnManccChanged();
    #endregion
		
		public LoHang()
		{
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			this._Sanpham = default(EntityRef<Sanpham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Malohang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Malohang
		{
			get
			{
				return this._Malohang;
			}
			set
			{
				if ((this._Malohang != value))
				{
					this.OnMalohangChanging(value);
					this.SendPropertyChanging();
					this._Malohang = value;
					this.SendPropertyChanged("Malohang");
					this.OnMalohangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KiHieu", DbType="VarChar(20)")]
		public string KiHieu
		{
			get
			{
				return this._KiHieu;
			}
			set
			{
				if ((this._KiHieu != value))
				{
					this.OnKiHieuChanging(value);
					this.SendPropertyChanging();
					this._KiHieu = value;
					this.SendPropertyChanged("KiHieu");
					this.OnKiHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSD", DbType="DateTime")]
		public System.Nullable<System.DateTime> HSD
		{
			get
			{
				return this._HSD;
			}
			set
			{
				if ((this._HSD != value))
				{
					this.OnHSDChanging(value);
					this.SendPropertyChanging();
					this._HSD = value;
					this.SendPropertyChanged("HSD");
					this.OnHSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluongnhap", DbType="Int NOT NULL")]
		public int Soluongnhap
		{
			get
			{
				return this._Soluongnhap;
			}
			set
			{
				if ((this._Soluongnhap != value))
				{
					this.OnSoluongnhapChanging(value);
					this.SendPropertyChanging();
					this._Soluongnhap = value;
					this.SendPropertyChanged("Soluongnhap");
					this.OnSoluongnhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giatien", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Giatien
		{
			get
			{
				return this._Giatien;
			}
			set
			{
				if ((this._Giatien != value))
				{
					this.OnGiatienChanging(value);
					this.SendPropertyChanging();
					this._Giatien = value;
					this.SendPropertyChanged("Giatien");
					this.OnGiatienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(20)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Masp", DbType="Int NOT NULL")]
		public int Masp
		{
			get
			{
				return this._Masp;
			}
			set
			{
				if ((this._Masp != value))
				{
					if (this._Sanpham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaspChanging(value);
					this.SendPropertyChanging();
					this._Masp = value;
					this.SendPropertyChanged("Masp");
					this.OnMaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mancc", DbType="Int NOT NULL")]
		public int Mancc
		{
			get
			{
				return this._Mancc;
			}
			set
			{
				if ((this._Mancc != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManccChanging(value);
					this.SendPropertyChanging();
					this._Mancc = value;
					this.SendPropertyChanged("Mancc");
					this.OnManccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_LoHang", Storage="_NhaCungCap", ThisKey="Mancc", OtherKey="Mancc", IsForeignKey=true)]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.LoHangs.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.LoHangs.Add(this);
						this._Mancc = value.Mancc;
					}
					else
					{
						this._Mancc = default(int);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sanpham_LoHang", Storage="_Sanpham", ThisKey="Masp", OtherKey="Masp", IsForeignKey=true)]
		public Sanpham Sanpham
		{
			get
			{
				return this._Sanpham.Entity;
			}
			set
			{
				Sanpham previousValue = this._Sanpham.Entity;
				if (((previousValue != value) 
							|| (this._Sanpham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sanpham.Entity = null;
						previousValue.LoHangs.Remove(this);
					}
					this._Sanpham.Entity = value;
					if ((value != null))
					{
						value.LoHangs.Add(this);
						this._Masp = value.Masp;
					}
					else
					{
						this._Masp = default(int);
					}
					this.SendPropertyChanged("Sanpham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nguoidung")]
	public partial class Nguoidung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNguoiDung;
		
		private string _Hoten;
		
		private string _Email;
		
		private string _Dienthoai;
		
		private string _Matkhau;
		
		private System.Nullable<int> _IDQuyen;
		
		private string _Diachi;
		
		private EntitySet<Donhang> _Donhangs;
		
		private EntityRef<PhanQuyen> _PhanQuyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNguoiDungChanging(int value);
    partial void OnMaNguoiDungChanged();
    partial void OnHotenChanging(string value);
    partial void OnHotenChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDienthoaiChanging(string value);
    partial void OnDienthoaiChanged();
    partial void OnMatkhauChanging(string value);
    partial void OnMatkhauChanged();
    partial void OnIDQuyenChanging(System.Nullable<int> value);
    partial void OnIDQuyenChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    #endregion
		
		public Nguoidung()
		{
			this._Donhangs = new EntitySet<Donhang>(new Action<Donhang>(this.attach_Donhangs), new Action<Donhang>(this.detach_Donhangs));
			this._PhanQuyen = default(EntityRef<PhanQuyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNguoiDung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNguoiDung
		{
			get
			{
				return this._MaNguoiDung;
			}
			set
			{
				if ((this._MaNguoiDung != value))
				{
					this.OnMaNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaNguoiDung = value;
					this.SendPropertyChanged("MaNguoiDung");
					this.OnMaNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hoten", DbType="NVarChar(50)")]
		public string Hoten
		{
			get
			{
				return this._Hoten;
			}
			set
			{
				if ((this._Hoten != value))
				{
					this.OnHotenChanging(value);
					this.SendPropertyChanging();
					this._Hoten = value;
					this.SendPropertyChanged("Hoten");
					this.OnHotenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dienthoai", DbType="NChar(10)")]
		public string Dienthoai
		{
			get
			{
				return this._Dienthoai;
			}
			set
			{
				if ((this._Dienthoai != value))
				{
					this.OnDienthoaiChanging(value);
					this.SendPropertyChanging();
					this._Dienthoai = value;
					this.SendPropertyChanged("Dienthoai");
					this.OnDienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matkhau", DbType="VarChar(50)")]
		public string Matkhau
		{
			get
			{
				return this._Matkhau;
			}
			set
			{
				if ((this._Matkhau != value))
				{
					this.OnMatkhauChanging(value);
					this.SendPropertyChanging();
					this._Matkhau = value;
					this.SendPropertyChanged("Matkhau");
					this.OnMatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDQuyen", DbType="Int")]
		public System.Nullable<int> IDQuyen
		{
			get
			{
				return this._IDQuyen;
			}
			set
			{
				if ((this._IDQuyen != value))
				{
					if (this._PhanQuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDQuyenChanging(value);
					this.SendPropertyChanging();
					this._IDQuyen = value;
					this.SendPropertyChanged("IDQuyen");
					this.OnIDQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(100)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nguoidung_Donhang", Storage="_Donhangs", ThisKey="MaNguoiDung", OtherKey="MaNguoidung")]
		public EntitySet<Donhang> Donhangs
		{
			get
			{
				return this._Donhangs;
			}
			set
			{
				this._Donhangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhanQuyen_Nguoidung", Storage="_PhanQuyen", ThisKey="IDQuyen", OtherKey="IDQuyen", IsForeignKey=true)]
		public PhanQuyen PhanQuyen
		{
			get
			{
				return this._PhanQuyen.Entity;
			}
			set
			{
				PhanQuyen previousValue = this._PhanQuyen.Entity;
				if (((previousValue != value) 
							|| (this._PhanQuyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhanQuyen.Entity = null;
						previousValue.Nguoidungs.Remove(this);
					}
					this._PhanQuyen.Entity = value;
					if ((value != null))
					{
						value.Nguoidungs.Add(this);
						this._IDQuyen = value.IDQuyen;
					}
					else
					{
						this._IDQuyen = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhanQuyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Donhangs(Donhang entity)
		{
			this.SendPropertyChanging();
			entity.Nguoidung = this;
		}
		
		private void detach_Donhangs(Donhang entity)
		{
			this.SendPropertyChanging();
			entity.Nguoidung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
	public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Mancc;
		
		private string _Tenncc;
		
		private string _Dienthoai;
		
		private string _Diachi;
		
		private EntitySet<LoHang> _LoHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManccChanging(int value);
    partial void OnManccChanged();
    partial void OnTennccChanging(string value);
    partial void OnTennccChanged();
    partial void OnDienthoaiChanging(string value);
    partial void OnDienthoaiChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    #endregion
		
		public NhaCungCap()
		{
			this._LoHangs = new EntitySet<LoHang>(new Action<LoHang>(this.attach_LoHangs), new Action<LoHang>(this.detach_LoHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mancc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Mancc
		{
			get
			{
				return this._Mancc;
			}
			set
			{
				if ((this._Mancc != value))
				{
					this.OnManccChanging(value);
					this.SendPropertyChanging();
					this._Mancc = value;
					this.SendPropertyChanged("Mancc");
					this.OnManccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenncc", DbType="NVarChar(50)")]
		public string Tenncc
		{
			get
			{
				return this._Tenncc;
			}
			set
			{
				if ((this._Tenncc != value))
				{
					this.OnTennccChanging(value);
					this.SendPropertyChanging();
					this._Tenncc = value;
					this.SendPropertyChanged("Tenncc");
					this.OnTennccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dienthoai", DbType="NChar(10)")]
		public string Dienthoai
		{
			get
			{
				return this._Dienthoai;
			}
			set
			{
				if ((this._Dienthoai != value))
				{
					this.OnDienthoaiChanging(value);
					this.SendPropertyChanging();
					this._Dienthoai = value;
					this.SendPropertyChanged("Dienthoai");
					this.OnDienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(MAX)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_LoHang", Storage="_LoHangs", ThisKey="Mancc", OtherKey="Mancc")]
		public EntitySet<LoHang> LoHangs
		{
			get
			{
				return this._LoHangs;
			}
			set
			{
				this._LoHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LoHangs(LoHang entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_LoHangs(LoHang entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanQuyen")]
	public partial class PhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDQuyen;
		
		private string _TenQuyen;
		
		private EntitySet<Nguoidung> _Nguoidungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDQuyenChanging(int value);
    partial void OnIDQuyenChanged();
    partial void OnTenQuyenChanging(string value);
    partial void OnTenQuyenChanged();
    #endregion
		
		public PhanQuyen()
		{
			this._Nguoidungs = new EntitySet<Nguoidung>(new Action<Nguoidung>(this.attach_Nguoidungs), new Action<Nguoidung>(this.detach_Nguoidungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDQuyen", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDQuyen
		{
			get
			{
				return this._IDQuyen;
			}
			set
			{
				if ((this._IDQuyen != value))
				{
					this.OnIDQuyenChanging(value);
					this.SendPropertyChanging();
					this._IDQuyen = value;
					this.SendPropertyChanged("IDQuyen");
					this.OnIDQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQuyen", DbType="NVarChar(20)")]
		public string TenQuyen
		{
			get
			{
				return this._TenQuyen;
			}
			set
			{
				if ((this._TenQuyen != value))
				{
					this.OnTenQuyenChanging(value);
					this.SendPropertyChanging();
					this._TenQuyen = value;
					this.SendPropertyChanged("TenQuyen");
					this.OnTenQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhanQuyen_Nguoidung", Storage="_Nguoidungs", ThisKey="IDQuyen", OtherKey="IDQuyen")]
		public EntitySet<Nguoidung> Nguoidungs
		{
			get
			{
				return this._Nguoidungs;
			}
			set
			{
				this._Nguoidungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Nguoidungs(Nguoidung entity)
		{
			this.SendPropertyChanging();
			entity.PhanQuyen = this;
		}
		
		private void detach_Nguoidungs(Nguoidung entity)
		{
			this.SendPropertyChanging();
			entity.PhanQuyen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuangCao")]
	public partial class QuangCao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Maqc;
		
		private string _Anhqc;
		
		private string _TinhTrang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaqcChanging(int value);
    partial void OnMaqcChanged();
    partial void OnAnhqcChanging(string value);
    partial void OnAnhqcChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public QuangCao()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maqc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Maqc
		{
			get
			{
				return this._Maqc;
			}
			set
			{
				if ((this._Maqc != value))
				{
					this.OnMaqcChanging(value);
					this.SendPropertyChanging();
					this._Maqc = value;
					this.SendPropertyChanged("Maqc");
					this.OnMaqcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anhqc", DbType="NVarChar(10)")]
		public string Anhqc
		{
			get
			{
				return this._Anhqc;
			}
			set
			{
				if ((this._Anhqc != value))
				{
					this.OnAnhqcChanging(value);
					this.SendPropertyChanging();
					this._Anhqc = value;
					this.SendPropertyChanged("Anhqc");
					this.OnAnhqcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(20)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sanpham")]
	public partial class Sanpham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Masp;
		
		private string _Tensp;
		
		private System.Nullable<decimal> _Giatien;
		
		private System.Nullable<int> _Soluong;
		
		private string _Mota;
		
		private System.Nullable<bool> _Sanphammoi;
		
		private string _Anhbia;
		
		private System.Nullable<int> _Mahang;
		
		private System.Nullable<int> _Maloaisp;
		
		private EntitySet<Chitietdonhang> _Chitietdonhangs;
		
		private EntitySet<chitietSanPhamKhuyenMai> _chitietSanPhamKhuyenMais;
		
		private EntitySet<LoHang> _LoHangs;
		
		private EntityRef<Hangsanxuat> _Hangsanxuat;
		
		private EntityRef<Loaisp> _Loaisp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaspChanging(int value);
    partial void OnMaspChanged();
    partial void OnTenspChanging(string value);
    partial void OnTenspChanged();
    partial void OnGiatienChanging(System.Nullable<decimal> value);
    partial void OnGiatienChanged();
    partial void OnSoluongChanging(System.Nullable<int> value);
    partial void OnSoluongChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnSanphammoiChanging(System.Nullable<bool> value);
    partial void OnSanphammoiChanged();
    partial void OnAnhbiaChanging(string value);
    partial void OnAnhbiaChanged();
    partial void OnMahangChanging(System.Nullable<int> value);
    partial void OnMahangChanged();
    partial void OnMaloaispChanging(System.Nullable<int> value);
    partial void OnMaloaispChanged();
    #endregion
		
		public Sanpham()
		{
			this._Chitietdonhangs = new EntitySet<Chitietdonhang>(new Action<Chitietdonhang>(this.attach_Chitietdonhangs), new Action<Chitietdonhang>(this.detach_Chitietdonhangs));
			this._chitietSanPhamKhuyenMais = new EntitySet<chitietSanPhamKhuyenMai>(new Action<chitietSanPhamKhuyenMai>(this.attach_chitietSanPhamKhuyenMais), new Action<chitietSanPhamKhuyenMai>(this.detach_chitietSanPhamKhuyenMais));
			this._LoHangs = new EntitySet<LoHang>(new Action<LoHang>(this.attach_LoHangs), new Action<LoHang>(this.detach_LoHangs));
			this._Hangsanxuat = default(EntityRef<Hangsanxuat>);
			this._Loaisp = default(EntityRef<Loaisp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Masp", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Masp
		{
			get
			{
				return this._Masp;
			}
			set
			{
				if ((this._Masp != value))
				{
					this.OnMaspChanging(value);
					this.SendPropertyChanging();
					this._Masp = value;
					this.SendPropertyChanged("Masp");
					this.OnMaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tensp", DbType="NVarChar(50)")]
		public string Tensp
		{
			get
			{
				return this._Tensp;
			}
			set
			{
				if ((this._Tensp != value))
				{
					this.OnTenspChanging(value);
					this.SendPropertyChanging();
					this._Tensp = value;
					this.SendPropertyChanged("Tensp");
					this.OnTenspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giatien", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Giatien
		{
			get
			{
				return this._Giatien;
			}
			set
			{
				if ((this._Giatien != value))
				{
					this.OnGiatienChanging(value);
					this.SendPropertyChanging();
					this._Giatien = value;
					this.SendPropertyChanged("Giatien");
					this.OnGiatienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluong", DbType="Int")]
		public System.Nullable<int> Soluong
		{
			get
			{
				return this._Soluong;
			}
			set
			{
				if ((this._Soluong != value))
				{
					this.OnSoluongChanging(value);
					this.SendPropertyChanging();
					this._Soluong = value;
					this.SendPropertyChanged("Soluong");
					this.OnSoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sanphammoi", DbType="Bit")]
		public System.Nullable<bool> Sanphammoi
		{
			get
			{
				return this._Sanphammoi;
			}
			set
			{
				if ((this._Sanphammoi != value))
				{
					this.OnSanphammoiChanging(value);
					this.SendPropertyChanging();
					this._Sanphammoi = value;
					this.SendPropertyChanged("Sanphammoi");
					this.OnSanphammoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anhbia", DbType="NVarChar(30)")]
		public string Anhbia
		{
			get
			{
				return this._Anhbia;
			}
			set
			{
				if ((this._Anhbia != value))
				{
					this.OnAnhbiaChanging(value);
					this.SendPropertyChanging();
					this._Anhbia = value;
					this.SendPropertyChanged("Anhbia");
					this.OnAnhbiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mahang", DbType="Int")]
		public System.Nullable<int> Mahang
		{
			get
			{
				return this._Mahang;
			}
			set
			{
				if ((this._Mahang != value))
				{
					if (this._Hangsanxuat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMahangChanging(value);
					this.SendPropertyChanging();
					this._Mahang = value;
					this.SendPropertyChanged("Mahang");
					this.OnMahangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maloaisp", DbType="Int")]
		public System.Nullable<int> Maloaisp
		{
			get
			{
				return this._Maloaisp;
			}
			set
			{
				if ((this._Maloaisp != value))
				{
					if (this._Loaisp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaloaispChanging(value);
					this.SendPropertyChanging();
					this._Maloaisp = value;
					this.SendPropertyChanged("Maloaisp");
					this.OnMaloaispChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sanpham_Chitietdonhang", Storage="_Chitietdonhangs", ThisKey="Masp", OtherKey="Masp")]
		public EntitySet<Chitietdonhang> Chitietdonhangs
		{
			get
			{
				return this._Chitietdonhangs;
			}
			set
			{
				this._Chitietdonhangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sanpham_chitietSanPhamKhuyenMai", Storage="_chitietSanPhamKhuyenMais", ThisKey="Masp", OtherKey="Masp")]
		public EntitySet<chitietSanPhamKhuyenMai> chitietSanPhamKhuyenMais
		{
			get
			{
				return this._chitietSanPhamKhuyenMais;
			}
			set
			{
				this._chitietSanPhamKhuyenMais.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sanpham_LoHang", Storage="_LoHangs", ThisKey="Masp", OtherKey="Masp")]
		public EntitySet<LoHang> LoHangs
		{
			get
			{
				return this._LoHangs;
			}
			set
			{
				this._LoHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hangsanxuat_Sanpham", Storage="_Hangsanxuat", ThisKey="Mahang", OtherKey="Mahang", IsForeignKey=true)]
		public Hangsanxuat Hangsanxuat
		{
			get
			{
				return this._Hangsanxuat.Entity;
			}
			set
			{
				Hangsanxuat previousValue = this._Hangsanxuat.Entity;
				if (((previousValue != value) 
							|| (this._Hangsanxuat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hangsanxuat.Entity = null;
						previousValue.Sanphams.Remove(this);
					}
					this._Hangsanxuat.Entity = value;
					if ((value != null))
					{
						value.Sanphams.Add(this);
						this._Mahang = value.Mahang;
					}
					else
					{
						this._Mahang = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hangsanxuat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loaisp_Sanpham", Storage="_Loaisp", ThisKey="Maloaisp", OtherKey="Maloaisp", IsForeignKey=true)]
		public Loaisp Loaisp
		{
			get
			{
				return this._Loaisp.Entity;
			}
			set
			{
				Loaisp previousValue = this._Loaisp.Entity;
				if (((previousValue != value) 
							|| (this._Loaisp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loaisp.Entity = null;
						previousValue.Sanphams.Remove(this);
					}
					this._Loaisp.Entity = value;
					if ((value != null))
					{
						value.Sanphams.Add(this);
						this._Maloaisp = value.Maloaisp;
					}
					else
					{
						this._Maloaisp = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loaisp");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chitietdonhangs(Chitietdonhang entity)
		{
			this.SendPropertyChanging();
			entity.Sanpham = this;
		}
		
		private void detach_Chitietdonhangs(Chitietdonhang entity)
		{
			this.SendPropertyChanging();
			entity.Sanpham = null;
		}
		
		private void attach_chitietSanPhamKhuyenMais(chitietSanPhamKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.Sanpham = this;
		}
		
		private void detach_chitietSanPhamKhuyenMais(chitietSanPhamKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.Sanpham = null;
		}
		
		private void attach_LoHangs(LoHang entity)
		{
			this.SendPropertyChanging();
			entity.Sanpham = this;
		}
		
		private void detach_LoHangs(LoHang entity)
		{
			this.SendPropertyChanging();
			entity.Sanpham = null;
		}
	}
}
#pragma warning restore 1591
